{"name":"Rapidash","tagline":"Evolve your API","body":"# Rapidash\r\n\r\nRapidash is an opinionated core for you to build a client for your API on.  The goal is to define a standard way that developers can quickly write a client for the consumption of their RESTful API.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'rapidash'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install rapidash\r\n\r\n## Usage\r\n\r\n### Resources\r\n\r\nResources can be defined as follows:\r\n\r\n```ruby\r\nclass Users < Rapidash::Base\r\nend\r\n```\r\n\r\nThe URL of the resource will be inferred from the class name.  In this case Users.  If you want to override that, you can with the url method.\r\n\r\n```ruby\r\nclass Users < Rapidash::Base\r\n  url :members  # or url \"members\" is also supported\r\nend\r\n```\r\n\r\nResources can exist inside other resources.  For example, on Github, a user has repositories.  The following could be how you build the resources:\r\n\r\n```ruby\r\nclass Repos < Rapidash::Base\r\nend\r\n\r\nclass Users < Rapidash::Base\r\n  resource :repos\r\nend\r\n```\r\n\r\n### Client\r\n\r\nThe main thing a client must do is define a method, `oauth` and `http` are currently supported.  You can also define resources which links a resource as defined above to the client.\r\n```ruby\r\nclass Client < Rapidash::Client\r\n  method :oauth\r\n  resource :users\r\nend\r\n```\r\n\r\nOAuth provides an initialize method which you can see in the Facebook client example.\r\n\r\nCurrently when using the HTTP method, you will need to define your own initialize method to set the site in use.\r\n\r\n### Making calls\r\n\r\n```ruby\r\nclient = Client.new\r\nclient.site = \"http://example.com/\"\r\nclient.users #Returns an instance of Users\r\nclient.users! #Will make a call to \"http://example.com/users\r\nclient.users!(1) #Will make a call to http://example.com/users/1\r\nclient.users!(params => {:page => 1}}) # Will make a call to http://example.com/users?page=1\r\n```\r\n\r\n## Example Clients\r\n\r\n### Facebook\r\n\r\n```ruby\r\nrequire 'rapidash'\r\n\r\nclass Me < Rapidash::Base\r\nend\r\n\r\nclass Facebook < Rapidash::Client\r\n  method :oauth\r\n  resource :me\r\nend\r\n\r\nclient = Facebook.new({\r\n  :site => \"https://graph.facebook.com\",\r\n  :uid => \"YOUR_ID\",\r\n  :secret => \"YOUR_SECRET\",\r\n  :access_token => \"YOUR_TOKEN\"\r\n})\r\np client.me!.first_name #Gary\r\n```\r\n\r\n### Github\r\n\r\n```ruby\r\nrequire 'rapidash'\r\n\r\nclass Repos < Rapidash::Base\r\nend\r\n\r\nclass Users < Rapidash::Base\r\n  resource :repos\r\nend\r\n\r\nclass Github < Rapidash::Client\r\n  method :http\r\n  resource :users\r\n\r\n  def initialize\r\n    @site = \"https://api.github.com/\"\r\n  end\r\nend\r\n\r\nclient = Github.new\r\np client.users!(\"Gazler\").name           #Gary Rennie\r\np client.users(\"Gazler\").repos![0].name  #Githug\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-39158998-1","note":"Don't delete this file! It's used internally to help with page regeneration."}